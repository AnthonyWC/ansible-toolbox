#!/usr/bin/python

import os
import sys
import argparse
import logging
import jinja2
import tempfile
import subprocess

LOG = logging.getLogger(__name__)

role_playbook='''---
- hosts: {{hosts}}
  gather_facts: {{gather}}
  roles:
    - role: {{role}}

'''

def parse_args():
    p = argparse.ArgumentParser()
    p.add_argument('--verbose', '-v',
                   action='store_const',
                   const='INFO',
                   dest='loglevel')
    p.add_argument('--debug', '-d',
                   action='store_const',
                   const='DEBUG',
                   dest='loglevel')

    p.add_argument('-i', '--inventory')
    p.add_argument('--gather', '-g',
                   action='store_true')
    p.add_argument('--no-gather', '-G',
                   action='store_false',
                   dest='gather')
    p.add_argument('--hosts', '-H',
                   default='all')
    p.add_argument('--extra-vars', '-e',
                   action='append',
                   default=[])

    p.add_argument('role')

    p.set_defaults(loglevel='WARN', gather=True)
    return p.parse_args()


def main():
    args = parse_args()
    logging.basicConfig(
        level=args.loglevel)

    template = jinja2.Template(role_playbook)

    with tempfile.NamedTemporaryFile(dir='.') as fd:
        fd.write(template.render(
            role=args.role,
            hosts=args.hosts,
            gather=args.gather,
        ))

        fd.flush()

        ap_args = [('-e', x) for x in args.extra_vars]
        cmdvec = ['ansible-playbook', fd.name]
        if args.inventory:
            cmdvec.extend(['-i', args.inventory])

        for arg in ap_args:
            cmdvec.extend(arg)

        print 'CMD:', cmdvec
        subprocess.check_call(cmdvec)
        
if __name__ == '__main__':
    main()
